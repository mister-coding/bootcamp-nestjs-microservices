services:

  user:
    image: mistercodingdev/ecommerce-api-user-service:v.1.4
    # working_dir: /app
    # volumes:
    #   - ./:/app
    depends_on:
      - db
    env_file:
      - .env
    ports:
      - 3000:3000
    # command: bash -c "yarn && yarn prisma generate && yarn prisma generate --schema ./prisma/schema_mongo.prisma && yarn start:dev user"

  product:
    image: mistercodingdev/ecommerce-api-product-service:v1.0.2
    # working_dir: /app
    # volumes:
    #   - ./:/app
    depends_on:
      - db
    env_file:
      - .env
    ports:
      - 3000:3000
    # command: bash -c "yarn && yarn prisma generate && yarn prisma generate --schema ./prisma/schema_mongo.prisma && yarn start:dev product"

  stock:
    image: mistercodingdev/ecommerce-api-stock-service:v1.0.0
    # working_dir: /app
    # volumes:
    #   - ./:/app
    env_file:
      - .env
    # command: bash -c "yarn && yarn prisma generate && yarn prisma generate --schema ./prisma/schema_mongo.prisma && yarn start:dev stock"
  
  payment:
    image: mistercodingdev/ecommerce-api-payment-service:v1.0.0
    env_file:
      - .env
    depends_on:
      - db
    # working_dir: /app
    # volumes:
    #   - ./:/app
    # command: bash -c "yarn && yarn prisma generate && yarn prisma generate --schema ./prisma/schema_mongo.prisma && yarn start:dev payment"

  shipping:
    image: mistercodingdev/ecommerce-api-shipping-service:v1.0.0
    env_file:
      - .env
    depends_on:
      - db
    # working_dir: /app
    # volumes:
    #   - ./:/app
    # command: bash -c "yarn && yarn prisma generate && yarn prisma generate --schema ./prisma/schema_mongo.prisma && yarn start:dev shipping"

  order:
    image: node:18
    working_dir: /app
    volumes:
      - ./:/app
    env_file:
      - .env
    command: bash -c "yarn && yarn prisma generate && yarn prisma generate --schema ./prisma/schema_mongo.prisma && yarn start:dev order"

  media:
    image: mistercodingdev/ecommerce-api-media-service:v1.0.0 
    # working_dir: /app
    # volumes:
    #   - ./:/app
    env_file:
      - .env
    # command: bash -c "yarn &&  yarn prisma generate && yarn prisma generate --schema ./prisma/schema_mongo.prisma && yarn start:dev media"

  notification:
    image: mistercodingdev/ecommerce-api-notification-service:v1.0.0
    # working_dir: /app
    env_file:
      - .env
    depends_on:
      - nats
    # volumes:
    #   - ./:/app
    # command: bash -c "yarn && yarn prisma generate && yarn prisma generate --schema ./prisma/schema_mongo.prisma && yarn start:dev notification"

  db:
    image: postgres:15.3
    environment:
      POSTGRES_USER: myuser
      POSTGRES_PASSWORD: mypassword
      POSTGRES_DB: ecommerce
    volumes:
      - dbdata:/var/lib/postgresql/data
    ports:
      - "5432:5432"

  minio:
    image: minio/minio:latest
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: "minioadmin"
      MINIO_ROOT_PASSWORD: "minioadmin"
      MINIO_DEFAULT_BUCKETS: "ecommerce"
    command: server /data --console-address ":9001"
    volumes:
      - minio_data:/data

  # mongo:
  #   image: mongo
  #   environment:
  #     MONGO_INITDB_ROOT_USERNAME: root
  #     MONGO_INITDB_ROOT_PASSWORD: example
  #   ports:
  #     - 27017:27017

  nats:
    image: nats
    ports:
      - "8222:8222"
    command: "--cluster_name NATS --cluster nats://0.0.0.0:6222 --http_port 8222"

  mail:
    image: rnwood/smtp4dev
    ports:
      - 5000:80
      - 2525:25

  
  # mongo-express:
  #   image: mongo-express
  #   restart: always
  #   ports:
  #     - 8081:8081
  #   environment:
  #     ME_CONFIG_MONGODB_ADMINUSERNAME: root
  #     ME_CONFIG_MONGODB_ADMINPASSWORD: example
  #     ME_CONFIG_MONGODB_URL: mongodb://root:example@mongo:27017/
  #     ME_CONFIG_BASICAUTH: false


  nginx:
    image: nginx:latest
    volumes:
      - ./:/var/www
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
    ports:
      - 80:80
    depends_on:
      - user
      - product
      - payment
      # - shipping
      # - media
      - order
      - stock

volumes:
  dbdata:
  minio_data: